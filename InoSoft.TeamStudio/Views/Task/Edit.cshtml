@model InoSoft.TeamStudio.Core.Entities.Task
           

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)
    <fieldset>
        <legend>Task</legend>

        @Html.HiddenFor(model => model.TaskId)
        <div>   
        @Html.Label("Project name")
        </div>
           <div>
            @Html.DisplayText("Project")
        </div>
         
         @if (Model.ParentTaskId != null)
         { 
        <div class="editor-label">
            @Html.LabelFor(model => model.ParentTaskId)

        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ParentTaskId)
            @Html.ValidationMessageFor(model => model.ParentTaskId)
        </div>
         }
         
        <div>
         @Html.Label("User")
            </div>
        <div>
        @Html.DropDownList("UsersList")
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Version)
        </div>
        <div class="editor-field">
        @Html.Editor("Version")
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Name)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Name)
            @Html.ValidationMessageFor(model => model.Name)
        </div>

        <div class="editor-TextArea">
            @Html.LabelFor(model => model.Description)
        </div>
        <div class="editor-field">
            @Html.TextAreaFor(model => model.Description)
            @Html.ValidationMessageFor(model => model.Description)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.IsFixed)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.IsFixed)
            @Html.ValidationMessageFor(model => model.IsFixed)
        </div>

        <p>
            <input type="submit" value="Save" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
